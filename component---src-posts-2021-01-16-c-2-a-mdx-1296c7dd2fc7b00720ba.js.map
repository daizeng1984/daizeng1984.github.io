{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/2021-01-16-c++2a.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-posts-2021-01-16-c-2-a-mdx-1296c7dd2fc7b00720ba.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/zdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Refresh my C++ 11 brain and upgrade to 17...`}</p>\n    <h1>{`Why?`}</h1>\n    <p>{`After learning Rust, I feel ready to absorb some good parts of modern C++.`}</p>\n    <h1><a parentName=\"h1\" {...{\n        \"href\": \"https://changkun.de/modern-cpp/\"\n      }}>{`Modern Cpp`}</a>{`(⭐⭐⭐)`}</h1>\n    <p>{`I found the book can be compressed to a few bullet points for myself:`}</p>\n    <h2>{`Cheatsheet`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`use nullptr instead of NULL`}</li>\n      <li parentName=\"ul\">{`constexpr for e.g. function fibonacci of compile time; also prefer use constexpr instead of const for compile time constants`}</li>\n      <li parentName=\"ul\">{`if/switch ( tmp variable ; ...) allow variables like for loop`}</li>\n      <li parentName=\"ul\">{`std::intializer_list<int`}{`>`}{` -> { 1, 2, 3} for sizable input`}</li>\n      <li parentName=\"ul\">{`tuple and destructor auto `}{`[x, y, z]`}{` = std::make_tuple<int, double, std::string`}{`>`}{`(...); std::get<0`}{`>`}{`(tuple) get 0 element`}</li>\n      <li parentName=\"ul\">{`get auto type: std::is_same<decltype(x), int>::value`}</li>\n      <li parentName=\"ul\">{`if constexpr( compile time if branch) {...`}</li>\n      <li parentName=\"ul\">{`use 'using' instead of typedef`}</li>\n      <li parentName=\"ul\">{`auto can be return value for template and can be parameters for functionals`}</li>\n      <li parentName=\"ul\">{`default template type template<typename T = int, typename U = int `}{`>`}</li>\n      <li parentName=\"ul\">{`skipped some parts due to sick of any unreadable meta programming ... unless you want to implement refection`}</li>\n      <li parentName=\"ul\">{`use enum class:type instead of enum`}</li>\n      <li parentName=\"ul\">{`constructor can call other constructor. Yay!`}</li>\n      <li parentName=\"ul\">{`inherit constructor with 'using Base::Base';`}</li>\n      <li parentName=\"ul\">{`java flavor override and final: virtual foo() override; or virtual foo() final;`}</li>\n      <li parentName=\"ul\">{`explicitly constructors: Magic()= default; Magic(const Magic& )=delete; Magic& operator=(const Magic &)=delete;`}</li>\n      <li parentName=\"ul\">{`lambda: `}<a parentName=\"li\" {...{\n          \"href\": \"args\"\n        }}>{`&`}</a>{` -> returnee {...} [] can be empty or values that want to capture in function when contructing lambda`}</li>\n      <li parentName=\"ul\">{`use std::function<...`}{`>`}{` instead of pointer`}</li>\n      <li parentName=\"ul\">{`bind function: std::bind(foo, std::placeholders::_1, 1,2) new function takes only one arg`}</li>\n      <li parentName=\"ul\">{`T&& extends the life of rvalue and can change it. while T&& itself as ref is lvalue.`}</li>\n      <li parentName=\"ul\">{`vec.push_back(std::move(str))`}</li>\n      <li parentName=\"ul\">{`std::array > T[] -> std::array.data() to T*`}</li>\n      <li parentName=\"ul\">{`std::forward_list`}</li>\n      <li parentName=\"ul\">{`std::shared_ptr get() reset() use_count() std::make_shared<T`}{`>`}{`(0) to create`}</li>\n      <li parentName=\"ul\">{`std::regex_match(std::string, std::regex) `}</li>\n      <li parentName=\"ul\">{`std::thread(lambda, args) and then join()`}</li>\n      <li parentName=\"ul\">{`std::future<T`}{`>`}{` f = std::async(std::launch::async, []{ return t; }); and f.wait();`}</li>\n      <li parentName=\"ul\">{`new lock guard std::unique_ptr > std::lock_guard<std::mutex `}{`>`}{` lock(a_mutex);`}</li>\n      <li parentName=\"ul\">{`std::atomic<T`}{`>`}{` fetch_add() fetch_sub() and is_lock_free to check if support on platform`}</li>\n      <li parentName=\"ul\">{`std::this_thread::sleep_for(std::chrono::milliseconds(900));`}</li>\n      <li parentName=\"ul\">{`Raw string R\"()\";`}</li>\n      <li parentName=\"ul\">{`alignof and alignas. Wow, my ancient memory of struct alignment.`}</li>\n    </ul>\n    <h1>{`My Addition`}</h1>\n    <p>{`The book didn't cover enough and filesystem is missing. So here I didn't some adding for complete:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`use std::string_view replacing c style string or even c++ std::string, and get bonus like start_with(), substr() and better performance etc. view is `}<strong parentName=\"li\">{`read only`}</strong></li>\n      <li parentName=\"ul\">{`std::optional<T`}{`>`}{` std::nullopt and error handling`}</li>\n      <li parentName=\"ul\">{`std::iota(v.begin(), v.end(), start_value) == range_set_container(start_value)`}</li>\n      <li parentName=\"ul\">{`std::ref and std::cref return std::reference_wrapper for convenience (e.g. shuffle list using vector referencing to the list element)`}</li>\n      <li parentName=\"ul\">{`std::swap and std::iter_swap`}</li>\n      <li parentName=\"ul\">{`other good stuff in algorithms e.g. copy, shuffle, sort etc.`}</li>\n      <li parentName=\"ul\">{`std::remove_const to remove const and const_cast`}</li>\n    </ul>\n    <h2>{`My Practice Notes`}</h2>\n    <p>{`Mimic rust😄...`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"cpp\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-cpp\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-cpp\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Types`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` i32`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` u32`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`unsigned`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` u64`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`unsigned`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`long`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`long`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` i64`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`long`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`long`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` i8`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`char`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`using`}</span>{` u8`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`unsigned`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`char`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// replace every old array with this...`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`constexpr`}</span>{` std`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`::`}</span>{`array arr `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"hello\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`\"world\"`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\ncout `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<<`}</span>{` arr`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`size`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`//no more sizeof(T[])/sizeof(T) and basically vector's a few read method`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`//same value for every element?`}</span>{`\narr`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`fill`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`5`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// or std::to_array(), ancient c style can intial to 0 when ={0} though`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// always prefer string_view to char[]`}</span>{`\nstring_view v `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{` str `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`/*const char* or string*/`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`while`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`size`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`isspace`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`++`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`while`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`j`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`i `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`isspace`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`j`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`--`}</span>{`j`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\ncout `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<<`}</span>{` v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`substr`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` j`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`-`}</span>{`i`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`+`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\nstring s`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`data`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`size`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`//copy back to a new string`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Lambda instead of functor`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sort`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`begin`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`end`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`/*capture list here*/`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`auto`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{` x`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`auto`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{` y`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`->`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`bool`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`return`}</span>{` x `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{` y`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// to implement similar algorithm`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`template`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`typename`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`InputIterator`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`typename`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`InputIterator`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`typename`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token class-name\"\n          }}>{`Compare`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`my_sort`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`InputIterator begin`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` InputIterator end`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` Compare cmp`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`for_each`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`map`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`begin`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` map`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`end`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{`v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`const`}</span>{` std`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`::`}</span>{`pair`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span>{`K`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`V`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{`entry`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{` v`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`push_back`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`entry`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`transform`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`map`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`begin`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` map`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`end`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` destination`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` lambda`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// GetOrDefault`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`*`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`map`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`emplace`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`key`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` value`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span>{`first`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Heavy String manipulate and different type e.g. string_view`}</span>{`\nstringstream `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<<`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`char`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`*`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<<`}</span>{` string_view`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<<`}</span>{` string`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&`}</span>{`\nstringstream `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`and`}</span>{` stoi\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// Random #`}</span>{`\ndefault_random_engine eng`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\nuniform_int_distribution`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`<`}</span><span parentName=\"code\" {...{\n            \"className\": \"token keyword\"\n          }}>{`int`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`>`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`dist`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`100`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`dist`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span>{`eng`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`->`}</span>{` random number in `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`0`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`100`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span></code></pre></div>\n    {\n      /* for myself, not necessary new features\n      ## Containers\n      * construction {1, 2, 3, ...}; or {{1, 2}, ...}; destruction auto [x, y, z] \n      * value_type basically whatever in container<...\\>\n      * join: either boost::algorithm::join(container, \",\") or do it simply like if(!output.empty()) output+=delim;\n      ## String\n      * stringstream << ... <<\n      * istringstream(\"...\") std::istream_iterator<T\\>(istream)\n      * ostringstream std::ostream_iterator<T\\>(ostream, delim)\n      -*/\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}