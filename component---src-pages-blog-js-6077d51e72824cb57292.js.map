{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["pageQuery","Blog","edges","data","allMdx","classes","i","icon","fluid","xs","sm","md","lg","filter","edge","node","frontmatter","date","category","view","visible","map","filename","fileAbsolutePath","toString","split","pop","fm","title","image","titleImage","childImageSharp","key","style","margin","border","borderRadius","Body","padding","Title","height","overflow","marginBottom","to","width","className","Text","fontWeight","fontSize","excerpt","substr","Footer","paddingTop","paddingBottom","backgroundColor","borderTop","color"],"mappings":"2FAAA,uKAOaA,EAAS,aA+FPC,UAnEF,SAAC,GAIP,IAFWC,EAEZ,EAHFC,KACIC,OAAUF,MAGRG,EAAU,CAAC,YAAa,YAAa,aAAc,YACrDC,EAAI,EACR,OACF,kBAAC,IAAD,CAAQC,KAAK,QACT,kBAAC,IAAD,CAAWC,OAAK,GAChB,kBAAC,IAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAE1BV,EACDW,QAAO,SAAAC,GACJ,QAASA,EAAKC,KAAKC,YAAYC,OACQ,SAAnCH,EAAKC,KAAKC,YAAYE,UACW,QAA9BJ,EAAKC,KAAKC,YAAYG,OACzBL,EAAKC,KAAKC,YAAYI,WAEvBC,KAAI,SAACP,GAEF,IAAMQ,EAAYR,EAAKC,KAAKQ,iBAAkBC,WAAWC,MAAM,KAAKC,MAAMD,MAAM,KAAK,GAC/EE,EAAKb,EAAKC,KAAKC,YACfY,EAAQD,EAAGC,MAAMJ,WAEjBK,EAASF,EAAGG,YAAcH,EAAGG,WAAWC,gBAAmBJ,EAAGG,WAAWC,gBAAgBvB,MAAQ,KACvG,OACQ,kBAAC,IAAD,CAAKwB,IAAKV,GACd,kBAAC,IAAD,CAAMW,MAAO,CAACC,OAAO,OAAQC,OAAQ,6BAA8BC,aAAc,MAI7E,kBAAC,IAAKC,KAAN,CAAWJ,MAAO,CAACK,QAAS,MACxB,kBAAC,IAAKC,MAAN,CAAYN,MAAO,CAACO,OAAO,OAAQC,SAAU,SAAUH,QAAS,OAAQI,aAAc,MAClF,kBAAC,OAAD,CAAMC,GAAE,MAAQrB,GAEXM,IAGT,yBAAKK,MAAO,CAACW,MAAO,OAAQJ,OAAQ,OAAQC,SAAU,WACjDZ,EAAS,kBAAC,IAAD,CAAKrB,MAAOqB,IAClB,yBAAKgB,UACDxC,EAAQC,IAAI,GACd2B,MAAO,CAACW,MAAM,OAAQJ,OAAQ,SAFhC,MAKR,kBAAC,IAAKM,KAAN,CAAWb,MAAO,CAACc,WAAY,IAAKC,SAAU,SAAUR,OAAQ,OAAQC,SAAU,SAAUH,QAAS,SAChGxB,EAAKC,KAAKkC,QAAQxB,MAAM,KAAK,GAAGyB,OAAO,EAAG,IAAM,QAGzD,kBAAC,IAAKC,OAAN,CAAalB,MAAO,CAACmB,WAAY,IAAKC,cAAe,IAAKC,gBAAiB,OAAQC,UAAU,SACzF,2BAAOtB,MAAO,CAACuB,MAAM,SAChB7B,EAAGV","file":"component---src-pages-blog-js-6077d51e72824cb57292.js","sourcesContent":["import React from \"react\"\nimport { CardDeck, CardColumns, Card, Container, Col, Row } from 'react-bootstrap';\nimport { Link, graphql} from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\n\nexport const pageQuery = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            titleImage {\n                      childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n            }\n            title\n            category\n            visible\n            view\n          }\n          fileAbsolutePath\n        }\n      }\n    }\n  }\n`\n\nconst Blog = ({\n    data: {\n        allMdx: { edges },\n    },\n}) => {\n    const classes = ['cloud-sky', 'green-sky', 'yellow-sky', 'pink-sky']\n    let i = 0\n    return (\n  <Layout icon=\"blog\">\n      <Container fluid>\n      <Row xs={1} sm={1} md={2} lg={3} >\n      {\n          edges\n        .filter(edge => {\n            return !!edge.node.frontmatter.date && (\n                edge.node.frontmatter.category === \"post\"\n                || edge.node.frontmatter.view == 'blog'\n            )&& edge.node.frontmatter.visible\n        }) // You can filter your posts based on some criteria\n              .map((edge) => {\n                  //TODO\n                  const filename = (edge.node.fileAbsolutePath).toString().split(\"/\").pop().split(\".\")[0]\n                  const fm = edge.node.frontmatter\n                  const title = fm.title.toString()\n                  const titleLimit = 25\n                  const image = (fm.titleImage && fm.titleImage.childImageSharp) ? fm.titleImage.childImageSharp.fluid : null\n                  return (\n                          <Col key={filename}>\n                      <Card style={{margin:'1rem', border: '3px solid rgba(0,0,0,.125)', borderRadius: '0'}}>\n                          {/* <Card.Header className=\"cloud-sky\" style={{minHeight: \"2rem\"}}> */}\n                          {/* </Card.Header> */}\n                          {/* <Card.Img variant=\"top\" src={fm.titleImage || 'https://via.placeholder.com/150' } /> */}\n                          <Card.Body style={{padding: '0'}}>\n                              <Card.Title style={{height:'4rem', overflow: 'hidden', padding: '1rem', marginBottom: '0'}}>\n                                  <Link to={`../${filename}`} >\n                                      {/* {title.length > titleLimit ? title.substr(0, titleLimit-3) + '...' : title} */}\n                                      {title}\n                                  </Link>\n                              </Card.Title>\n                              <div style={{width: '100%', height: '5rem', overflow: 'hidden'}}>\n                                  {image ? (<Img fluid={image} />) : (\n                                      <div className={\n                                          classes[i++%4]\n                                      } style={{width:'100%', height: '100%'}}> </div>\n                              )}\n                              </div>\n                              <Card.Text style={{fontWeight: 200, fontSize: 'medium', height: '7rem', overflow: 'hidden', padding: '1rem'}}>\n                                  {edge.node.excerpt.split(\".\")[0].substr(0, 90) + '...'}\n                              </Card.Text>\n                          </Card.Body>\n                          <Card.Footer style={{paddingTop: '0', paddingBottom: '0', backgroundColor: '#fff', borderTop:'none'}}>\n                              <small style={{color:'#ccc'}}>\n                                  {fm.date}\n                              </small>\n                          </Card.Footer>\n                      </Card>\n                  </Col>\n\n                  )\n              })\n      }\n  </Row>\n  </Container>\n  </Layout>\n)\n}\n\nexport default Blog\n\n"],"sourceRoot":""}