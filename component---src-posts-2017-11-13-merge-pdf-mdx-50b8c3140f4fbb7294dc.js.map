{"version":3,"sources":["webpack:///./src/posts/2017-11-13-merge-pdf.mdx","webpack:///./src/components/posts-layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","PostPage","icon"],"mappings":"8OAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iHACA,2CACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKC,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,SAEY,kCAAMA,WAAW,QAAW,CACrC,UAAa,+BADJ,KAEI,kCAAMA,WAAW,QAAW,CACzC,UAAa,mBADA,KAJhB,YAM6B,kCAAMA,WAAW,QAAW,CACtD,UAAa,+BADa,KAEb,kCAAMA,WAAW,QAAW,CACzC,UAAa,mBADA,KARhB,gDAWL,uDAAsC,kCAAMA,WAAW,KAAQ,CAC3D,UAAa,kBADqB,KAAtC,2BAE6C,kCAAMA,WAAW,KAAQ,CAClE,UAAa,kBAD4B,KAF7C,oHAKA,+DAA8C,+BAAGA,WAAW,KAAQ,CAChE,KAAQ,kGADkC,YAA9C,KAGA,wCAAuB,+BAAGA,WAAW,KAAQ,CACzC,KAAQ,qDADW,gBAO3BJ,EAAWK,gBAAiB,G,oCCrD5B,iDASeC,IAJE,SAACJ,GAAD,OACb,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBK,KAAK","file":"component---src-posts-2017-11-13-merge-pdf-mdx-50b8c3140f4fbb7294dc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Feeling excited ðŸ¤“ to be able to find a magic trick for old MFC-7360N's duplex scanning.`}</p>\n    <h1>{`Best CLI of Today`}</h1>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-bash\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`pdftk `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`A`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`even.pdf `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`B`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`odd.pdf shuffle A Bend-1 output merged.pdf`}</code></pre></div>\n    <p>{`This command reverses document `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`B`}</code>{` and then shuffles with `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`A`}</code>{`. Fast and easy. No need to upload pdf to unreliable website or install any bulky pricy software. Just one line.`}</p>\n    <p>{`In Mac OS X El Captain, please install `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/pdftk_server-2.02-mac_osx-10.11-setup.pkg\"\n      }}>{`this one`}</a>{`.`}</p>\n    <p>{`Just love these `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.pdflabs.com/docs/pdftk-cli-examples/\"\n      }}>{`one liners`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n"],"sourceRoot":""}