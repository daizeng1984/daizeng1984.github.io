(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{"8hLB":function(e,a,n){"use strict";var t=n("q1tI"),s=n.n(t),c=(n("Wbzz"),n("Bl7J"));a.a=function(e){return s.a.createElement(c.a,Object.assign({},e,{icon:"post"}))}},yNNz:function(e,a,n){"use strict";n.r(a),n.d(a,"_frontmatter",(function(){return b})),n.d(a,"default",(function(){return i}));var t=n("zLVn"),s=(n("q1tI"),n("7ljp")),c=n("8hLB"),b={},o={_frontmatter:b},p=c.a;function i(e){var a=e.components,n=Object(t.a)(e,["components"]);return Object(s.b)(p,Object.assign({},o,n,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"gcc is deprecated now. Use clang!"),Object(s.b)("h1",null,"GCC vs Clang++"),Object(s.b)("p",null,"Short story: GCC is slow, old (consider compiling a C++17 package in ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux"}),"RHEL"),"), GPL, not hackable;\nwhile ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://clang.llvm.org/"}),"Clang")," changes everyting above plus having its family support from ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://llvm.org/"}),"LLVM"),".\nIf you don't care about programming at operating system level and don't need to maintain legacy code that solely relies on GCC, this is definitely a benefitial move."),Object(s.b)("h1",null,"One Button"),Object(s.b)("p",null,"Chandler Carruth's ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://youtu.be/uZI_Qla4pNA"}),'"LLVM: A Modern, Open C++ Toolchain"')," is a very nice talk to know more about modern toolchain for C++. What I found inspiring is how ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"modern")," clang becomes. Below is a script drawn from the talk to download everything and build your clang from scratch."),Object(s.b)("div",{className:"gatsby-highlight","data-language":"bash"},Object(s.b)("pre",Object.assign({parentName:"div"},{className:"language-bash"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone git://github.com/ninja-build/ninja.git\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," ninja\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," checkout release\n./configure.py --bootstrap\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"..")," \n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/llvm.git ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Don't clone everything"),"\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," llvm/tools \n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/clang.git\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/lld.git\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," clang/tools\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/clang-tools-extra.git extra\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/projects\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/libcxx.git\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/libcxxabi.git\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"git")," clone --depth",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token number"}),"1")," https://llvm.org/git/compiler-rt.git \n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"mkdir")," build ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"&&")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"cd")," build\ncmake ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"..")," -GNinja  -DCMAKE_MAKE_PROGRAM",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token variable"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),"$("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token builtin class-name"}),"pwd"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),")")),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/ninja/ninja -DCMAKE_BUILD_TYPE",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),"Release -DCMAKE_INSTALL_PREFIX",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token environment constant"}),"$HOME"),"/.local/ -DCOMPILER_RT_INCLUDE_TESTS",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),"OFF -DLLVM_ENABLE_ASSERTIONS",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),"OFF\n\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token variable"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),"$("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token builtin class-name"}),"pwd"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),")")),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/ninja/ninja ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"&&")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token variable"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),"$("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token builtin class-name"}),"pwd"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),")")),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),".."),"/ninja/ninja ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token function"}),"install")))),Object(s.b)("p",null,"Finally, some finishing touch:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"bash"},Object(s.b)("pre",Object.assign({parentName:"div"},{className:"language-bash"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"export")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token assign-left variable"}),"CXX"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token variable"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),"$("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"which")," clang++",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),")")),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token builtin class-name"}),"export")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token assign-left variable"}),"CC"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token variable"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),"$("),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token function"}),"which")," clang",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token variable"}),")"))))),Object(s.b)("p",null,"I actually use this ",Object(s.b)("a",Object.assign({parentName:"p"},{href:""}),"script")," to install Clang in my local dotfiles environment."),Object(s.b)("h1",null,"Compiler at Your Finger Tip"),Object(s.b)("p",null,"Now after a few minute wait, you got the new freshly baked c++ compiler. No root permission or any painful dependency packages needed. Even though C++ seems to be the hardest language to apply ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://buckaroo.pm/"}),"modern package management"),", I still hope C++ community will eventually come up with a ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"npm")," equivalent public code repo/package manager at least working for most *nix system. "),Object(s.b)("h1",null,"Side Notes"),Object(s.b)("p",null,"If you lead a Pythonful life, to install ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"cmake")," you can simply run ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"pip install cmake")," and upgrade becomes easier."))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-posts-2018-08-11-clang-llvm-mdx-a15ed4bd06f31a3ab0a6.js.map