(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{"8hLB":function(e,t,a){"use strict";var s=a("q1tI"),n=a.n(s),i=(a("Wbzz"),a("Bl7J"));t.a=function(e){return n.a.createElement(i.a,Object.assign({},e,{icon:"post"}))}},N8ol:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return r}));var s=a("zLVn"),n=(a("q1tI"),a("7ljp")),i=a("8hLB"),c=a("xVEI"),l={},o={_frontmatter:l},b=i.a;function r(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(n.b)(b,Object.assign({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"found a simple graph visualizer to give a try ..."),Object(n.b)("h1",null,"Simple"),Object(n.b)("p",null,"I used to make ",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://drive.google.com/file/d/12ku-mqtJtsGfC8rbUQUMC2GTXgjWDHhl/view?usp=sharing"}),"fancy graph")," for visualization apps. But sometimes I just want something simple, browser accessible and enable me to quickly visualize some json DAG or flow chart. Got this nice workflow visualizer from github (",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/d-band/flow-kit"}),"Flow-Kit"),") and happy to use it as a tool. Also thanks to excellent react json viewer (",Object(n.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/mac-s-g/react-json-view"}),"rjv"),"). Now we have this graph visualizer takes simple json ðŸŽ‰ðŸŽ‰ðŸŽ‰."),Object(n.b)(c.a,{mdxType:"FlowVis"}),Object(n.b)("p",null,"Oh, it actually just requires informal JSON as we usually write in Javascript which means you don't need to use double quotes for keys!"),Object(n.b)("h1",null,"Next"),Object(n.b)("p",null,"Next I want it to be flexible for all json format: I can visciously ",Object(n.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"eval")," a Javascript snippet for converting any data or json into the correct format."),Object(n.b)("p",null,"TODO:"),Object(n.b)("ul",{className:"contains-task-list"},Object(n.b)("li",Object.assign({parentName:"ul"},{className:"task-list-item"}),Object(n.b)("input",Object.assign({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Fix exception"),Object(n.b)("li",Object.assign({parentName:"ul"},{className:"task-list-item"}),Object(n.b)("input",Object.assign({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Fix duplicate edge issue"),Object(n.b)("li",Object.assign({parentName:"ul"},{className:"task-list-item"}),Object(n.b)("input",Object.assign({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Add eval to input"),Object(n.b)("li",Object.assign({parentName:"ul"},{className:"task-list-item"}),Object(n.b)("input",Object.assign({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Add debounce for input change")),Object(n.b)("h1",null,"Further"),Object(n.b)("p",null,"Make url take parameters of json format... a crappy jump link visualizer ðŸ˜‚"))}r.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-posts-2021-10-29-graph-visualizer-mdx-0f225b9bb3d4acd4890a.js.map