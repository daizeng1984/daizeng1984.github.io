(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{"8hLB":function(e,t,n){"use strict";var a=n("q1tI"),o=n.n(a),r=(n("Wbzz"),n("Bl7J"));t.a=function(e){return o.a.createElement(r.a,Object.assign({},e,{icon:"post"}))}},Zpav:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return i}));var a=n("zLVn"),o=(n("q1tI"),n("7ljp")),r=n("8hLB"),s={},c={_frontmatter:s},p=r.a;function i(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)(p,Object.assign({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A course for one project: building a compiler for ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"http://homepage.cs.uiowa.edu/~jones/compiler/falcon/"}),"Falcon"),' (a C-style "toy" language created by Prof. ',Object(o.b)("a",Object.assign({parentName:"p"},{href:"http://homepage.cs.uiowa.edu/~jones/"}),"Douglas Jones"),"). We built everything using C/C++ and assembly from scratch and have it run on ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"http://www.raspberrypi.org/"}),"Raspberry Pi"),". It can parse most of the statements and translate them into ARM assembly language. It was great fun and we are proud to get high score."))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-posts-project-compiler-from-scratch-mdx-f1b7270dec45f9399e2f.js.map