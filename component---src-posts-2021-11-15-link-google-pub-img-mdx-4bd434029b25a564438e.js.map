{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/2021-11-15-link-google-pub-img.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,iDASeA,IAJE,SAACC,GAAD,OACb,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,KAAK,Y,oLCEfC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,yFACA,iCACA,0OACA,mEACA,8BACE,iBAAGC,WAAW,cAAa,+BAAGA,WAAW,KAAQ,CAC7C,KAAQ,8DADe,2DAI7B,4BACA,8BACE,iBAAGA,WAAW,cAAa,+BAAGA,WAAW,KAAQ,CAC7C,KAAQ,wDADe,qDAI7B,kCACA,mDACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKA,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,8NAOL,kMAAiL,kCAAMA,WAAW,KAAQ,CACtM,UAAa,kBADgK,MAAjL,oBAOJH,EAAWI,gBAAiB","file":"component---src-posts-2021-11-15-link-google-pub-img-mdx-4bd434029b25a564438e.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/zengdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Annoying google drive share link issue if you just copy/paste...`}</p>\n    <h1>{`Problem`}</h1>\n    <p>{`Recently getting more and more lazy to organize images through blog folders. I know it has a lot of neat image caching/optimization features. Link to Google Drive seems to be a convenient way for me sometimes.`}</p>\n    <p>{`Yet, haunted by this issues of converting:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://drive.google.com/file/d/%7BID%7D/view?usp=sharing\"\n        }}>{`https://drive.google.com/file/d/{ID}/view?usp=sharing`}</a></p>\n    </blockquote>\n    <p>{`to:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><a parentName=\"p\" {...{\n          \"href\": \"https://drive.google.com/uc?export=view&id=%7BID%7D\"\n        }}>{`https://drive.google.com/uc?export=view&id={ID}`}</a></p>\n    </blockquote>\n    <h1>{`Solution`}</h1>\n    <p>{`Put this in your Ultisnip:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`snippet gimg \"google image\"\n![\\${0:\\${VISUAL}}](\\${1:\\`!v\nsubstitute(getreg(\"*\"), \"https://drive.google.com/file/d/\\\\\\\\(.*\\\\\\\\)/view.*\", \"https://drive.google.com/uc\\\\\\\\?export=view\\\\\\\\&id=\\\\\\\\1\", \"g\")\n\\`})\nendsnippet`}</code></pre></div>\n    <p>{`Then it grab the register/clipboard and return the correct google drive link as markdown image. But it's essentially just vim command. Feel free to tailor the line after `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`!v`}</code>{` to your need. `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}