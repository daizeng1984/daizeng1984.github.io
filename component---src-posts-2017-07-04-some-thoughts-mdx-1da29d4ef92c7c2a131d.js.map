{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/2017-07-04-some-thoughts.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,iDASeA,IAJE,SAACC,GAAD,OACb,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,KAAK,Y,kLCEfC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,qEAAoD,kCAAMC,WAAW,KAAQ,CACzE,UAAa,kBADmC,UAApD,kKAEyL,kCAAMA,WAAW,KAAQ,CAC9M,UAAa,kBADwK,gBAFzL,wFAKA,8CACA,mEAAkD,kCAAMA,WAAW,KAAQ,CACvE,UAAa,kBADiC,UAAlD,0CAEiE,kCAAMA,WAAW,KAAQ,CACtF,UAAa,kBADgD,+BAFjE,wHAKA,+BACA,wGAGA,qBAAG,iCAAKA,WAAW,KAAQ,CACvB,IAAO,gDACP,IAAO,gCAFX,yCAIA,sCACA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKA,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,SAEY,kCAAMA,WAAW,QAAW,CACrC,UAAa,iCADJ,QAEO,kCAAMA,WAAW,QAAW,CAC5C,UAAa,sBADG,KAEH,kCAAMA,WAAW,QAAW,CACzC,UAAa,sBADA,KANhB,IAQqB,kCAAMA,WAAW,QAAW,CAC9C,UAAa,sBADK,KARrB,KAWP,kCAAMA,WAAW,QAAW,CAClB,UAAa,sBADvB,SAOFH,EAAWI,gBAAiB","file":"component---src-posts-2017-07-04-some-thoughts-mdx-1da29d4ef92c7c2a131d.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/zengdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`What thoughts? Youâ€™ll find this post in your `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`_posts`}</code>{` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`jekyll serve`}</code>{`, which launches a web server and auto-regenerates your site when a file is updated.`}</p>\n    <p>{`$$ a_2 + b_2 = c_2 $$`}</p>\n    <p>{`To add new posts, simply add a file in the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`_posts`}</code>{` directory that follows the convention `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`YYYY-MM-DD-name-of-post.ext`}</code>{` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.`}</p>\n    <p>{`Google`}</p>\n    <p>{`So usually,....\nSo there's Jekyll and other things\nthe design is inpsired by:`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/assets/images/blog/olympic-national-park.png\",\n        \"alt\": \"Olympic National Park Lake\"\n      }}></img>{`{: width=\"50%\" class=\"img-thumbnail\"}`}</p>\n    <p>{`So how is it?`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-bash\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}>{`const `}<span parentName=\"code\" {...{\n            \"className\": \"token function-name function\"\n          }}>{`main`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span></code></pre></div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}