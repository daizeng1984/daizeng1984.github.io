{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/project-feeling-lucky.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,iDASeA,IAJE,SAACC,GAAD,OACb,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,KAAK,Y,kLCEfC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,oTACA,6BACA,qEAAoD,kCAAMC,WAAW,KAAQ,CACzE,UAAa,kBADmC,wBAApD,qBAGA,kBAAS,CACP,UAAa,mBACb,gBAAiB,QAChB,iCAAKA,WAAW,OAAU,CACzB,UAAa,kBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBADd,mDAGL,2CACA,6RAA4Q,+BAAGA,WAAW,KAAQ,CAC9R,KAAQ,+DADgQ,QAA5Q,KAGA,qFAAoE,kCAAMA,WAAW,KAAQ,CACzF,UAAa,kBADmD,uBAApE,YAEgD,kCAAMA,WAAW,KAAQ,CACrE,UAAa,kBAD+B,SAFhD,qFAI2G,+BAAGA,WAAW,KAAQ,CAC7H,KAAQ,4CAD+F,QAJ3G,sDAUA,+BACC,kCAAMA,WAAW,KAAQ,CACtB,UAAa,kBADhB,4ZADD,wLAkBF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,0HADd,0HAGE,yCACA,gFAA+D,+BAAGA,WAAW,KAAQ,CACjF,KAAQ,gFADmD,+EAA/D,mEAG4D,+BAAGA,WAAW,KAAQ,CAC9E,KAAQ,oDADgD,mDAH5D,IAKiE,+BAAGA,WAAW,KAAQ,CACnF,KAAQ,wCADqD,uCALjE,QAOyD,+BAAGA,WAAW,KAAQ,CAC3E,KAAQ,sHAD6C,sHAGzD,sCACA,oDACA,iFACA,kCACA,+DACA,iCACA,0EACO,+BAAGA,WAAW,KAAQ,CACzB,KAAQ,gGADL,+FADP,+FAK8C,+BAAGA,WAAW,KAAQ,CAChE,KAAQ,iEADkC,iEAG9C,sCACA,iFACM,+BAAGA,WAAW,KAAQ,CACxB,KAAQ,0DADN,0DAGN,iCACA,yFAAwE,+BAAGA,WAAW,KAAQ,CAC1F,KAAQ,kFAD4D,mFAO5EH,EAAWI,gBAAiB","file":"component---src-posts-project-feeling-lucky-mdx-9ff48dc31871bd140f6a.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`I feel I need a quick keyword linking tools in Vim so that I could keep writing while providing reflink. But I'm too lazy to grab link by myself and I trust Google Feeling Lucky feature most of the time. Therefore, this plugin is written to feed my need! It just does the job for me.`}</p>\n    <h2>{`How`}</h2>\n    <p>{`Put your cursor on the word and make command `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`:FeelingLuckyReflink`}</code>{` and you're done.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"text\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-text\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-text\"\n        }}>{`Jekyll --> [Jekyll](https://jekyllrb.com/)`}</code></pre></div>\n    <h2>{`Vim Plugin again!`}</h2>\n    <p>{`Writing python plugin for vim is the easist since Vim script is a little bit obscure for me. Not like last time, my plugins was a module under deoplete and I spent a lot of time to read it. This time, I just need a quick helloworld neovim plugin in Python like `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jacobsimpson/nvim-example-python-plugin\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`Clone to plugged folder and remove vim part. Don't forgot to `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`UpdateRemotePlugins`}</code>{` and add `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`:exec`}</code>{` to run function. I probably need command so I changed accordingly as illustrated `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/neovim/python-client\"\n      }}>{`here`}</a>{`. Now just leave the rest for Python requests lib!`}</p>\n    {\n      /* Done */\n    }\n    <p>{`%%\n%% `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`%%         buf = self.vim.current.buffer\n%%         (lnum1, col1) = buf.mark('<')\n%%         (lnum2, col2) = buf.mark('>')\n%%         lines = self.vim.eval('getline({}, {})'.format(lnum1, lnum2))\n%%         if lines :\n%%             lines[0] = lines[0][col1:]\n%%             lines[-1] = lines[-1][:col2]\n%%             self.vim.command('echo \"' + \"\\\\n\".join(lines) + '\"')\n%%         else:\n%%\n%%`}</code>{`\n%%\n%%\nBecause of lack of document and examples, and the cursor keeps resetting. Confused... It seems like Functioni will be reset while command is okay...\nSome information on\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://stackoverflow.com/questions/19728252/python-get-redirected-url-from-googles-i-feel-lucky-and-duckduckgos-im-f\"\n      }}>{`https://stackoverflow.com/questions/19728252/python-get-redirected-url-from-googles-i-feel-lucky-and-duckduckgos-im-f`}</a></p>\n    <h2>{`Now More Bonus!`}</h2>\n    <p>{`I need to add the function of auto tag generation using `}<a parentName=\"p\" {...{\n        \"href\": \"http://brettterpstra.com/2013/03/23/auto-tagging-jekyll-posts-with-zemanta/\"\n      }}>{`http://brettterpstra.com/2013/03/23/auto-tagging-jekyll-posts-with-zemanta/`}</a>{`\nZemanta is down... So I decided to find a light solution like `}<a parentName=\"p\" {...{\n        \"href\": \"https://pypi.python.org/pypi/topia.termextract/\"\n      }}>{`https://pypi.python.org/pypi/topia.termextract/`}</a>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ashleyw/phrasie/\"\n      }}>{`https://github.com/ashleyw/phrasie/`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.quora.com/What-are-good-tools-to-extract-key-words-and-or-topics-tags-from-a-random-paragraph-of-text\"\n      }}>{`https://www.quora.com/What-are-good-tools-to-extract-key-words-and-or-topics-tags-from-a-random-paragraph-of-text`}</a></p>\n    <h2>{`Try out RAKE`}</h2>\n    <h2>{`Selenium for Robot Defense`}</h2>\n    <p>{`Not working, Google block this ip and ask for recaptcha.`}</p>\n    <h2>{`Chromote`}</h2>\n    <p>{`It's too complicate and a lot of setup`}</p>\n    <h2>{`API key`}</h2>\n    <p>{`AIzaSyCYtnzDWqzPYE6LTtNyuxEZ6pLy6DCkysQ\nexample: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/google/google-api-python-client/blob/master/samples/customsearch/main.py\"\n      }}>{`https://github.com/google/google-api-python-client/blob/master/samples/customsearch/main.py`}</a>{`\ncx  =  014324005263008877010:zmwtfjahkfe\nYou could get it from the cse's setup->basics-> `}<a parentName=\"p\" {...{\n        \"href\": \"https://support.google.com/customsearch/answer/2631040?hl=en\"\n      }}>{`https://support.google.com/customsearch/answer/2631040?hl=en`}</a></p>\n    <h2>{`I might need`}</h2>\n    <p>{`Save the prevoius reflink and find it and done!\nUse db? `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.python.org/3/library/shelve.html#example\"\n      }}>{`https://docs.python.org/3/library/shelve.html#example`}</a></p>\n    <h2>{`Python3`}</h2>\n    <p>{`To be able to use python3 you should have folder structure like: `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/neovim/python-client#user-content-remote-new-style-plugins\"\n      }}>{`https://github.com/neovim/python-client#user-content-remote-new-style-plugins`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}