(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{"/yG0":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return l}));var n=a("zLVn"),o=(a("q1tI"),a("7ljp")),i=a("8hLB"),s={},c={_frontmatter:s},b=i.a;function l(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)(b,Object.assign({},c,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Track issues..."),Object(o.b)("h1",null,"Motivation"),Object(o.b)("p",null,"Just want to contribute a bit back to community and also I heavily relies on conda on my environment setup. Conda compare brew it has advantage of self contains ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"./2018-11-18-conda-everything"}),"cross building environment")," and more control to versioning."),Object(o.b)("p",null,"This post is just my tracking board in case I forgot these PR:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://github.com/conda-forge/staged-recipes/pull/12493"}),"neovim")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://github.com/conda-forge/staged-recipes/pull/12584"}),"fasd")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object.assign({parentName:"li"},{href:"https://github.com/conda-forge/staged-recipes/pull/13682"}),"zoxide"))),Object(o.b)("h1",null,"Problems"),Object(o.b)("h2",null,"Neovim"),Object(o.b)("h3",null,"Libtool Hardcoded Path"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Conda build env is not reproducible")),Object(o.b)("p",null,"Remember conda is heavily home-folderable, it doesn't require root permission; it doesn't hardcoded path; so ..."),Object(o.b)("p",null,"It's not right to have these:"),Object(o.b)("div",{className:"gatsby-highlight","data-language":"bash"},Object(o.b)("pre",Object.assign({parentName:"div"},{className:"language-bash"}),Object(o.b)("code",Object.assign({parentName:"pre"},{className:"language-bash"}),Object(o.b)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# Assembler program."),"\n",Object(o.b)("span",Object.assign({parentName:"code"},{className:"token assign-left variable"}),"AS"),Object(o.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"="),Object(o.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"/Users/runner/miniforge3/conda-bld/libtool_1596899629849/_build_env/bin/x86_64-apple-darwin13.4.0-as"')))),Object(o.b)("p",null,"Note Mac's libtool is different from GNU libtool. When you ",Object(o.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"brew install libtool")," you are actually installing glibtool."),Object(o.b)("p",null,"Therefore when you build ",Object(o.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"libtool")," with other environment, you get the relocation nightmare. One way to stop is to remove prefix e.g. like ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/conda-forge/libtool-feedstock/pull/22"}),"this")," for all env vars and do some post built dirty removing."),Object(o.b)("h3",null,"Neovim Sticked to Lua5.1"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Multiversion & coexists package is hard in many pkg manager including Conda")),Object(o.b)("p",null,"Lua5.1 is not back compatible since 5.3. So, things get more and more sticky. Multiple PR to solve, so there's no so far a conda-forge certified nvim pkg. If you are in a hurry, please try mine: ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://anaconda.org/daizeng1984/nvim"}),"https://anaconda.org/daizeng1984/nvim")),Object(o.b)("p",null,"ðŸ¥´I'm now dreaming neovim was ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/neovim/neovim/issues/8669"}),"written in Rust"),"."),Object(o.b)("h2",null,"Fasd"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Command line (bash etc.) script has conflicting requirements")),Object(o.b)("p",null,"The ticket is sticked to whether we should include bash in conda while conda itself is relies on bash. This is more a philosophy/belief type of argument. I realized don't have much time then and drop the conversation and later fell into new love zoxide, which is much faster and also kinds of migrating my pkg army to ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"./2020-10-24-nix-power"}),"Nix")," which is more rootily powerful."),Object(o.b)("h2",null,"Zoxide"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"my z for conda")),Object(o.b)("p",null,"Just created the ticket and rust recipes are pretty standard..."),Object(o.b)("p",null,"Be ",Object(o.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/conda-forge/staged-recipes/pull/13208#issuecomment-726767185"}),"guided")," to solve the license files for zoxide... and it goes smoothly."),Object(o.b)("h2",null,"Direnv"),Object(o.b)("p",null,"How can this be missing! Let's fix that."))}l.isMDXComponent=!0},"8hLB":function(e,t,a){"use strict";var n=a("q1tI"),o=a.n(n),i=(a("Wbzz"),a("Bl7J"));t.a=function(e){return o.a.createElement(i.a,Object.assign({},e,{icon:"post"}))}}}]);
//# sourceMappingURL=component---src-posts-2020-08-26-fight-with-nvim-recipe-mdx-5c0a2e82a9737d01b06c.js.map