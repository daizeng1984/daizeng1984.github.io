(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"8hLB":function(e,a,t){"use strict";var n=t("q1tI"),s=t.n(n),c=(t("Wbzz"),t("Bl7J"));a.a=function(e){return s.a.createElement(c.a,Object.assign({},e,{icon:"post"}))}},PZE4:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return b})),t.d(a,"default",(function(){return i}));var n=t("zLVn"),s=(t("q1tI"),t("7ljp")),c=t("8hLB"),b={},o={_frontmatter:b},p=c.a;function i(e){var a=e.components,t=Object(n.a)(e,["components"]);return Object(s.b)(p,Object.assign({},o,t,{components:a,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Just to help explain a bit..."),Object(s.b)("h1",null,"Nix & Home Manager"),Object(s.b)("p",null,"Why Nix? please visit my ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"./2020-10-24-nix-power"}),"previous post"),". "),Object(s.b)("p",null,"Home manager's default programs for darwin is limited and nix-darwin is intrusive for me. However, gpg's setup is not really hard nowaday (no more backend/daemon managing stuff). It's all about setting up ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"gpg*.conf")," files in ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),".gnupg")," once you have ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"gnupg")," and ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"pinentry")," from nixpkgs."),Object(s.b)("p",null,"In home-manager, if you do:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"nix"},Object(s.b)("pre",Object.assign({parentName:"div"},{className:"language-nix"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-nix"}),"programs",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"gpg ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    enable ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"true"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),Object(s.b)("p",null,"this will generate ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"gpg.conf")," file, while you do:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"nix"},Object(s.b)("pre",Object.assign({parentName:"div"},{className:"language-nix"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-nix"}),"services",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"gpg",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"-"),"agent ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"{"),"\n    enable ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token boolean"}),"true"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"}")))),Object(s.b)("p",null,"It generates the ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"gpg-agent.conf"),". But this services bundles with ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"systemd")," for Linux and it fails on Mac (on Mac ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"launchd")," should be used). ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"gpg-agent")," will be started automatically when you make gpg calls so no need to manage it as service. Therefore, one workaround, which I'm showing now, is to directly grab the part we need in this ",Object(s.b)("a",Object.assign({parentName:"p"},{href:"https://github.com/nix-community/home-manager/blob/master/modules/services/gpg-agent.nix"}),"service nix file"),". "),Object(s.b)("p",null,"So setup for ",Object(s.b)("code",Object.assign({parentName:"p"},{className:"language-text"}),"curses")," ends up like this:"),Object(s.b)("div",{className:"gatsby-highlight","data-language":"nix"},Object(s.b)("pre",Object.assign({parentName:"div"},{className:"language-nix"}),Object(s.b)("code",Object.assign({parentName:"pre"},{className:"language-nix"}),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"let"),"\n  pinentryFlavor ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"curses"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token keyword"}),"in"),"\n",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"\n  home",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"file",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'".gnupg/gpg-agent.conf"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"text ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"=")," lib",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),"concatStringsSep ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"\\n"')," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"("),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"no-grab"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"++"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]")," ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token comment"}),"# more options"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token operator"}),"++"),"\n    ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"["),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token string"}),'"pinentry-program ',Object(s.b)("span",Object.assign({parentName:"span"},{className:"token interpolation"}),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token antiquotation variable"}),"$"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),"pkgs",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),"pinentry",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"."),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token antiquotation variable"}),"$"),Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"{"),"pinentryFlavor",Object(s.b)("span",Object.assign({parentName:"span"},{className:"token punctuation"}),"}")),'}/bin/pinentry"'),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),"]"),"\n  ",Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),")"),Object(s.b)("span",Object.assign({parentName:"code"},{className:"token punctuation"}),";")))),Object(s.b)("h1",null,"Troubleshooting Guide"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"You might want to trash/rename ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),".gnupg")," folder for a fresh start."),Object(s.b)("li",{parentName:"ul"},"You might want to check if process ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"gpg-agent")," is running."),Object(s.b)("li",{parentName:"ul"},"You might want to check keys with ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"gpg --list-secret-keys"),"."),Object(s.b)("li",{parentName:"ul"},"For neovim, ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"curses")," would not work. You might want to use ",Object(s.b)("code",Object.assign({parentName:"li"},{className:"language-text"}),"pkgs.pinentry-mac")," as pinentry or other alternatives such as gtk/qt for linux.")))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-posts-2020-11-14-gpg-setup-mdx-ac4097e83e3d105bee01.js.map