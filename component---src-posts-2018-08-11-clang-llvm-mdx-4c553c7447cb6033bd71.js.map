{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/2018-08-11-clang-llvm.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-posts-2018-08-11-clang-llvm-mdx-4c553c7447cb6033bd71.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/zengdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`gcc is deprecated now. Use clang!`}</p>\n    <h1>{`GCC vs Clang++`}</h1>\n    <p>{`Short story: GCC is slow, old (consider compiling a C++17 package in `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux\"\n      }}>{`RHEL`}</a>{`), GPL, not hackable;\nwhile `}<a parentName=\"p\" {...{\n        \"href\": \"https://clang.llvm.org/\"\n      }}>{`Clang`}</a>{` changes everyting above plus having its family support from `}<a parentName=\"p\" {...{\n        \"href\": \"https://llvm.org/\"\n      }}>{`LLVM`}</a>{`.\nIf you don't care about programming at operating system level and don't need to maintain legacy code that solely relies on GCC, this is definitely a benefitial move.`}</p>\n    <h1>{`One Button`}</h1>\n    <p>{`Chandler Carruth's `}<a parentName=\"p\" {...{\n        \"href\": \"https://youtu.be/uZI_Qla4pNA\"\n      }}>{`\"LLVM: A Modern, Open C++ Toolchain\"`}</a>{` is a very nice talk to know more about modern toolchain for C++. What I found inspiring is how `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`modern`}</code>{` clang becomes. Below is a script drawn from the talk to download everything and build your clang from scratch.`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-bash\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone git://github.com/ninja-build/ninja.git\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` ninja\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` checkout release\n./configure.py --bootstrap\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{` \n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/llvm.git `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`# Don't clone everything`}</span>{`\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` llvm/tools \n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/clang.git\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/lld.git\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` clang/tools\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/clang-tools-extra.git extra\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/projects\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/libcxx.git\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/libcxxabi.git\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`git`}</span>{` clone --depth`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token number\"\n          }}>{`1`}</span>{` https://llvm.org/git/compiler-rt.git \n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`mkdir`}</span>{` build `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`cd`}</span>{` build\ncmake `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{` -GNinja  -DCMAKE_MAKE_PROGRAM`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token variable\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`$(`}</span><span parentName=\"span\" {...{\n              \"className\": \"token builtin class-name\"\n            }}>{`pwd`}</span><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`)`}</span></span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/ninja/ninja -DCMAKE_BUILD_TYPE`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`Release -DCMAKE_INSTALL_PREFIX`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token environment constant\"\n          }}>{`$HOME`}</span>{`/.local/ -DCOMPILER_RT_INCLUDE_TESTS`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`OFF -DLLVM_ENABLE_ASSERTIONS`}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span>{`OFF\n\n`}<span parentName=\"code\" {...{\n            \"className\": \"token variable\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`$(`}</span><span parentName=\"span\" {...{\n              \"className\": \"token builtin class-name\"\n            }}>{`pwd`}</span><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`)`}</span></span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/ninja/ninja `}<span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`&&`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token variable\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`$(`}</span><span parentName=\"span\" {...{\n              \"className\": \"token builtin class-name\"\n            }}>{`pwd`}</span><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`)`}</span></span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`..`}</span>{`/ninja/ninja `}<span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`install`}</span></code></pre></div>\n    <p>{`Finally, some finishing touch:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-bash\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`CXX`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token variable\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`$(`}</span><span parentName=\"span\" {...{\n              \"className\": \"token function\"\n            }}>{`which`}</span>{` clang++`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`)`}</span></span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token builtin class-name\"\n          }}>{`export`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token assign-left variable\"\n          }}>{`CC`}</span><span parentName=\"code\" {...{\n            \"className\": \"token operator\"\n          }}>{`=`}</span><span parentName=\"code\" {...{\n            \"className\": \"token variable\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`$(`}</span><span parentName=\"span\" {...{\n              \"className\": \"token function\"\n            }}>{`which`}</span>{` clang`}<span parentName=\"span\" {...{\n              \"className\": \"token variable\"\n            }}>{`)`}</span></span></code></pre></div>\n    <p>{`I actually use this `}<a parentName=\"p\" {...{\n        \"href\": \"\"\n      }}>{`script`}</a>{` to install Clang in my local dotfiles environment.`}</p>\n    <h1>{`Compiler at Your Finger Tip`}</h1>\n    <p>{`Now after a few minute wait, you got the new freshly baked c++ compiler. No root permission or any painful dependency packages needed. Even though C++ seems to be the hardest language to apply `}<a parentName=\"p\" {...{\n        \"href\": \"https://buckaroo.pm/\"\n      }}>{`modern package management`}</a>{`, I still hope C++ community will eventually come up with a `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`npm`}</code>{` equivalent public code repo/package manager at least working for most *nix system. `}</p>\n    <h1>{`Side Notes`}</h1>\n    <p>{`If you lead a Pythonful life, to install `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`cmake`}</code>{` you can simply run `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`pip install cmake`}</code>{` and upgrade becomes easier.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}