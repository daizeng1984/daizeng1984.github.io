{"version":3,"sources":["webpack:///./src/components/posts-layout.js","webpack:///./src/posts/2021-07-04-dap.mdx"],"names":["PostPage","props","icon","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"8FAAA,iDASeA,IAJE,SAACC,GAAD,OACb,kBAAC,IAAD,iBAAYA,EAAZ,CAAmBC,KAAK,Y,kLCEfC,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,iBAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,iEACA,mCACA,8HAA6G,+BAAGC,WAAW,KAAQ,CAC/H,KAAQ,0CADiG,YAA7G,2CAGA,oCACA,sGAAqF,kCAAMA,WAAW,KAAQ,CAC1G,UAAa,kBADoE,oBAArF,0EAGA,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,0DADT,0DAGH,qBAAG,+BAAGA,WAAW,KAAQ,CACrB,KAAQ,4CADT,4CAGH,4CACF,+BAAGA,WAAW,KAAQ,CAChB,KAAQ,2EADd,4EAOFH,EAAWI,gBAAiB","file":"component---src-posts-2021-07-04-dap-mdx-fee35e45e03852b80444.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from './layout.js'\n\nconst PostPage = (props) => (\n    <Layout {...props} icon='post' />\n)\n\nexport default PostPage\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/zdai/Workspace/vimwiki/Projects/Blogger/blogv3/src/components/posts-layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`LSP works really well. Let's make DAP...`}</p>\n    <h1>{`Debugging`}</h1>\n    <p>{`If you ever use LSP or its powered tools (VSCode, CoC.nvim), you know how great it is (see my previou `}<a parentName=\"p\" {...{\n        \"href\": \"./2018-11-05-language-server-protocol\"\n      }}>{`LSP post`}</a>{`). Now we have a new one for debugging!`}</p>\n    <h1>{`Vimspector`}</h1>\n    <p>{`This plugin support any adapters you config and you define per project config `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`.vimspector.json`}</code>{` in root folder. It support many adapters! First need to download the `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.programmersought.com/article/64425817863/\"\n      }}>{`https://www.programmersought.com/article/64425817863/`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codevion.github.io/#!vim/coc.md\"\n      }}>{`https://codevion.github.io/#!vim/coc.md`}</a></p>\n    <p>{`implement our own?\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/google/cppdap/blob/main/examples/hello_debugger.cpp\"\n      }}>{`https://github.com/google/cppdap/blob/main/examples/hello_debugger.cpp`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}